html {
  margin: 0;
  padding: 0;
  border: 0; }

body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, code, del, dfn, em, img, q, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, dialog, figure, footer, header, hgroup, nav, section {
  margin: 0;
  padding: 0;
  border: 0;
  font-weight: inherit;
  font-style: inherit;
  font-size: 100%;
  font-family: inherit;
  vertical-align: baseline; }

article, aside, dialog, figure, footer, header, hgroup, nav, section {
  display: block; }

body {
  line-height: 1.5;
  background: white; }

table {
  border-collapse: separate;
  border-spacing: 0; }

caption, th, td {
  text-align: left;
  font-weight: normal;
  float: none !important; }

table, th, td {
  vertical-align: middle; }

blockquote before, blockquote after, q before, q after {
  content: ''; }

a img {
  border: none; }

b, i {
  display: none; }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  outline: 0 none; }

body {
  font: normal 18px/1.6em sans-serif;
  overflow-x: hidden; }

.wrapper {
  max-width: 1140px;
  margin: 0 auto;
  padding: 0 15px; }

.container {
  max-width: 1140px;
  margin-left: auto;
  margin-right: auto;
  /* height: 100vh; */ }
  .container:after {
    content: " ";
    display: block;
    clear: both; }

.row {
  zoom: 1; }
  .row:before, .row:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden; }
  .row:after {
    clear: both; }
  @media (min-width: 64em) {
    .row .col-6 {
      width: 49.15254%;
      float: left;
      margin-right: 1.69492%; } }
  @media (min-width: 64em) {
    .row .col-6:last-child {
      width: 49.15254%;
      float: right;
      margin-right: 0; } }
  @media (min-width: 64em) {
    .row .col-6.last-child {
      width: 49.15254%;
      float: right;
      margin-right: 0; } }

@media (min-width: 64em) {
  .menu-hover .page-wrapper {
    -webkit-transform: matrix3d(1, 0, 0, -0.00005, 0, 1, 0, 0, 0, 0, 1, 0, 50, 0, 0, 1);
            transform: matrix3d(1, 0, 0, -0.00005, 0, 1, 0, 0, 0, 0, 1, 0, 50, 0, 0, 1); }
  .page-wrapper {
    display: block;
    -webkit-perspective: 1000px;
            perspective: 1000px;
    -webkit-transition: -webkit-transform .25s ease-in-out;
            transition: transform .25s ease-in-out; } }

.page {
  background: #222;
  color: #fff;
  width: 100%;
  height: 100vh; }
  @media (min-width: 64em) {
    .page {
      padding: 250px 300px; } }
  .page.center {
    text-align: center; }
  .page.page-top {
    padding: 0 15px;
    background: url("../images/feature-small.jpg") center center;
    background-size: cover; }
    @media (min-width: 90em) {
      .page.page-top {
        background: url("../images/feature-big.jpg") center center; } }
    .page.page-top .text {
      width: 100%;
      max-width: 1000px;
      margin: 0 auto;
      height: 100vh;
      background: url("../images/feature-text.png") center center no-repeat;
      background-size: 100%; }
  .page h2 {
    font: 800 3em/1.6em "Helvetica", sans-serif;
    text-transform: uppercase;
    letter-spacing: 10px; }
  .page p {
    font: 500 1.2em/1.6em "Helvetica", sans-serif; }

.hamburger-menu {
  display: block;
  position: fixed;
  height: 65px;
  width: 65px;
  top: 0px;
  right: 0px;
  z-index: 1000;
  cursor: pointer; }
  @media (min-width: 50em) {
    .hamburger-menu {
      display: none;
      right: 50px;
      width: 65px;
      height: 95px; } }
  .hamburger-menu .text {
    color: #000;
    float: left;
    text-transform: uppercase; }
    .open .hamburger-menu .text {
      color: #fff;
      display: none; }
  .hamburger-menu .bar, .hamburger-menu .bar:after, .hamburger-menu .bar:before {
    width: 38px;
    height: 3px;
    background: #fff; }
    .open .hamburger-menu .bar, .open .hamburger-menu .bar:after, .open .hamburger-menu .bar:before {
      background: #fff; }
  .hamburger-menu .bar {
    display: block;
    position: relative;
    -webkit-transform: translateY(8px);
        -ms-transform: translateY(8px);
            transform: translateY(8px);
    -webkit-transition: all 0ms 300ms;
            transition: all 0ms 300ms;
    margin: 0 auto;
    top: 22px; }
    @media (min-width: 50em) {
      .hamburger-menu .bar {
        top: 35px; } }
    .hamburger-menu .bar.animate {
      background: rgba(255, 255, 255, 0); }
      .hamburger-menu .bar.animate::before {
        bottom: 0;
        -webkit-transform: rotate(-45deg);
            -ms-transform: rotate(-45deg);
                transform: rotate(-45deg);
        transition: bottom 300ms cubic-bezier(0.23, 1, 0.32, 1), transform 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1);
        -webkit-transition: bottom 300ms cubic-bezier(0.23, 1, 0.32, 1), -webkit-transform 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1); }
      .hamburger-menu .bar.animate:after {
        top: 0;
        -webkit-transform: rotate(45deg);
            -ms-transform: rotate(45deg);
                transform: rotate(45deg);
        transition: top 300ms cubic-bezier(0.23, 1, 0.32, 1), transform 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1);
        -webkit-transition: top 300ms cubic-bezier(0.23, 1, 0.32, 1), -webkit-transform 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1); }
    .hamburger-menu .bar:before {
      content: "";
      position: absolute;
      left: 0;
      bottom: 8px;
      transition: bottom 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1), transform 300ms cubic-bezier(0.23, 1, 0.32, 1);
      -webkit-transition: bottom 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1), -webkit-transform 300ms cubic-bezier(0.23, 1, 0.32, 1); }
    .hamburger-menu .bar:after {
      content: "";
      position: absolute;
      left: 0;
      top: 8px;
      transition: top 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1), transform 300ms cubic-bezier(0.23, 1, 0.32, 1);
      -webkit-transition: top 300ms 300ms cubic-bezier(0.23, 1, 0.32, 1), -webkit-transform 300ms cubic-bezier(0.23, 1, 0.32, 1); }

@media (max-width: 50em) {
  .open .nav-main {
    display: block; }
  .nav-main {
    display: none;
    height: 100vh;
    background: #000;
    position: fixed;
    top: 0;
    width: 100%; }
    .nav-main ul {
      position: absolute;
      top: 50%;
      -webkit-transform: translateY(-50%);
          -ms-transform: translateY(-50%);
              transform: translateY(-50%);
      width: 100%; }
      .nav-main ul a {
        font-size: 1.4em;
        line-height: 1.8em;
        display: block;
        color: #fff;
        text-decoration: none;
        text-align: center;
        text-transform: uppercase; } }

@media (min-width: 50em) {
  .nav-main {
    position: fixed;
    z-index: 100;
    top: 50%;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%);
    left: 0; }
    .nav-main ul {
      padding: 0 0 0 75px; }
      .nav-main ul:hover span {
        opacity: 1; }
      .nav-main ul li {
        zoom: 1;
        list-style: none; }
        .nav-main ul li:before, .nav-main ul li:after {
          content: "\0020";
          display: block;
          height: 0;
          overflow: hidden; }
        .nav-main ul li:after {
          clear: both; }
        .nav-main ul li:before {
          content: "";
          width: 10px;
          height: 10px;
          background: #fff;
          display: block;
          border-radius: 100%;
          float: left;
          line-height: 40px;
          margin: 14px 25px 0 0; }
        .nav-main ul li span {
          opacity: 0;
          -webkit-transition: opacity .25s ease-in-out;
                  transition: opacity .25s ease-in-out; }
          .nav-main ul li span a {
            cursor: pointer;
            display: block;
            float: left;
            font-weight: bold;
            font-size: 0.85em;
            color: #fff;
            text-decoration: none;
            -webkit-transition: opacity .25s ease-in-out;
                    transition: opacity .25s ease-in-out;
            line-height: 40px;
            opacity: 0.85; }
            .nav-main ul li span a:hover {
              opacity: 1; } }


/*# sourceMappingURL=data:application/json;base64, */